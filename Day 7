// 1679. Max Number of K-Sum Pairs

// You are given an integer array nums and an integer k.
// In one operation, you can pick two numbers from the array whose sum equals k and remove them from the array. 0
// Return the maximum number of operations you can perform on the array.

// code 

class Solution:
    def maxOperations(self, nums: List[int], k: int) -> int:

        count = l = 0
        r = len(nums) - 1

        nums.sort()

        while l < r :

            if (nums[l] + nums[r]) == k :

                count += 1

                l += 1 
                r -= 1

            elif (nums[l] + nums[r]) < k :

                l += 1
            
            elif (nums[l] + nums[r]) > k :

                r -= 1
        

        return count



// 643. Maximum Average Subarray I

// You are given an integer array nums consisting of n elements, and an integer k.
// Find a contiguous subarray whose length is equal to k that has the maximum average value and return this value. Any answer with a calculation error less than 10-5 will be accepted.

// code 

class Solution:
    def findMaxAverage(self, nums: List[int], k: int) -> float:

        sum = 0

        for i in range(k) :

            sum += nums[i]
        

        m_sum = sum

        s = 0
        e = k

        while e < len(nums) :

            sum -= nums[s]
            s += 1

            sum += nums[e]
            e += 1

            m_sum = max( sum , m_sum )

        
        return m_sum / k
        
