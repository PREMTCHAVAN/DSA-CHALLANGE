17. Letter Combinations of a Phone Number

Given a string containing digits from 2-9 inclusive, return all possible letter combinations that the number could represent. Return the answer in any order.
A mapping of digits to letters (just like on the telephone buttons) is given below. Note that 1 does not map to any letters.

Example 1:

Input: digits = "23"
Output: ["ad","ae","af","bd","be","bf","cd","ce","cf"]


code 

class Solution:
      def letterCombinations(self, digits: str) -> List[str]:
        if not digits:
            return []

        alp = { "2" : "abc" ,"3" : "def" , "4" : "ghi" , "5" : "jkl" , "6" : "mno" , "7" : "pqrs" , "8" : "tuv" , "9" : "wxyz"  }
        combinations = ['']

        for d in digits :

            temp = []

            for combo in combinations :

                for a in alp[d] :

                    temp.append( combo + a )

            combinations = temp

        return combinations
