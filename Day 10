// 724. Find Pivot Index

// Given an array of integers nums, calculate the pivot index of this array.
// The pivot index is the index where the sum of all the numbers strictly to the left of the index is equal to the sum of all the numbers strictly to the index's right.
// If the index is on the left edge of the array, then the left sum is 0 because there are no elements to the left. This also applies to the right edge of the array.
// Return the leftmost pivot index. If no such index exists, return -1.

// code 

class Solution:
    def pivotIndex(self, nums: List[int]) -> int:

        total = sum(nums)

        left_sum = 0

        for i in range(len(nums)) :

            right_sum = total - nums[i] - left_sum 

            if right_sum == left_sum :

                return i
                
            left_sum += nums[i]

        
        return -1 



// 2215. Find the Difference of Two Arrays

// Given two 0-indexed integer arrays nums1 and nums2, return a list answer of size 2 where:

// answer[0] is a list of all distinct integers in nums1 which are not present in nums2.
// answer[1] is a list of all distinct integers in nums2 which are not present in nums1.
// Note that the integers in the lists may be returned in any order.

// code 

class Solution:
    def findDifference(self, nums1: List[int], nums2: List[int]) -> List[List[int]]:

        set1 = set(nums1)
        set2 = set(nums2)

        a1 = set1 - set2
        a2 = set2 - set1

        answer = []

        answer.append(a1)
        answer.append(a2)

        return answer
        
