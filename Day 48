5. Longest Palindromic Substring

Given a string s, return the longest 
palindromic 
substring in s.

Example 1:

Input: s = "babad"
Output: "bab"
Explanation: "aba" is also a valid answer.
Example 2:

Input: s = "cbbd"
Output: "bb"


code 


class Solution:
    def longestPalindrome(self, s: str) -> str:

        max_strr = ""
        
        for i in range(len(s)) :

            odd_strr = self.finder( s , i , i ) 
            even_strr = self.finder( s , i , i+1 )

            if len(max_strr) < len(odd_strr) : max_strr = odd_strr
            if len(max_strr) < len(even_strr) : max_strr = even_strr
            
        return max_strr
    
    def finder( self , s , l , r ) :

        while l >= 0 and r < len(s) and s[l] == s[r] :                
            l -= 1
            r += 1

        return s[l + 1 : r]

